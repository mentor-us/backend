name: build-prod

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: ${{ github.event.repository.name }}-prod

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./src
    outputs:
      image_path: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          PAT_GITHUB_TOKEN: op://mentorus/github-pat-publish-package/token

      - name: Inject secret with 1Password
        run: |
          export OP_SERVICE_ACCOUNT_TOKEN=${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          op inject -i ./src/main/resources/application-common.yml.template -o ./src/main/resources/application-common.yml
          op inject -i ./src/main/resources/application-prod.yml.template -o ./src/main/resources/application-prod.yml

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Rename jar file to app.jar
        run: mv "target/${{ github.event.repository.name }}-$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout).jar" "target/app.jar"

      # - name: Upload app.jar to github
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app.jar
      #     path: src/target/app.jar

      - name: Login to github package
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ steps.op-load-secret.outputs.PAT_GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}/prod
          tags: |
            latest
            type=sha,enable=true,prefix=prod-,suffix=,format=short

      - name: Build and push to github package
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
