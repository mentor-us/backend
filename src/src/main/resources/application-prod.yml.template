s3-settings:
  bucket-name: "op://mentorus/backend-prod/s3-settings/bucket-name"
  access-key: "op://mentorus/backend-prod/s3-settings/access-key"
  secret-key: "op://mentorus/backend-prod/s3-settings/secret-key"
  region-name: "op://mentorus/backend-prod/s3-settings/region-name"
  service-url: "op://mentorus/backend-prod/s3-settings/service-url"
  force-path-style: "op://mentorus/backend-prod/s3-settings/force-path-style"

app:
  frontendUrl: "op://mentorus/backend-prod/app/frontendUrl"
  jwt:
    issuer: "op://mentorus/backend-prod/jwt/issuer"
    secret-key: "op://mentorus/backend-prod/jwt/secret-key"
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris: "op://mentorus/backend-prod/jwt/authorized-redirect-uris"

spring:
  datasource:
    url: "op://mentorus/backend-prod/jpa/datasource.url"
    username: "op://mentorus/backend-prod/jpa/datasource.username"
    password: "op://mentorus/backend-prod/jpa/datasource.password"
    driver-class-name: org.postgresql.Driver
  flyway:
    baseline-on-migrate: true
    validate-on-migrate: true
    enabled: true
    schemas: public
    user: "op://mentorus/backend-prod/jpa/datasource.username"
    password: "op://mentorus/backend-prod/jpa/datasource.password"
    locations: classpath:db/migration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "op://mentorus/backend-prod/oauth2-client/google-client-id"
            client-secret: "op://mentorus/backend-prod/oauth2-client/google-client-secret"
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: openid, email, profile
          azure:
            client-id: "op://mentorus/backend-prod/oauth2-client/azure-client-id"
            client-secret: "op://mentorus/backend-prod/oauth2-client/azure-client-secret"
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope: openid, email, profile
          apple:
            client-id: "op://mentorus/backend-prod/oauth2-client/apple-client-id"
            client-secret: "op://mentorus/backend-prod/oauth2-client/apple-client-secret"
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: openid, name, email
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account
          azure:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            jwk-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post
            token-uri: https://appleid.apple.com/auth/token
            jwk-set-uri: https://appleid.apple.com/auth/keys
            user-name-attribute: sub
